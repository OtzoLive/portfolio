---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { Image } from "@astrojs/image/components";
import VitalsComp from "../components/VitalsComp.astro";

export interface Props {
	content: {
		title: string;
		description: string;
		publishDate?: string;
		updatedDate?: string;
		heroImage?: string;
		readTime: string;
	};
}

const {
	content: {
		title,
		description,
		publishDate,
		updatedDate,
		heroImage,
		readTime,
	},
} = Astro.props as Props;

//If there is no updated date, don't include it
var updatedDateCheck = "";
var lastUpdatedOn = "";

if (updatedDate === undefined) {
	//no change
} else if (updatedDate != undefined) {
	lastUpdatedOn = "Last updated on ";
	updatedDateCheck = updatedDate;
}

// Match the `heroImage` frontmatter string to its correct
// Astro.glob() import of the file in the src/ directory.
const assets = await Astro.glob("../assets/**/*");
const heroImageAsset = assets.find((asset) => {
	if (!heroImage) {
		return false;
	}
	if (!asset.default?.src) {
		return false;
	}
	const index = asset.default.src.indexOf("/assets/");
	return asset.default.src.slice(index) === heroImage;
});
---

<html data-theme="wireframe" lang="en-us">
	<VitalsComp />

	<BaseHead title={title} description={description} />

	<body class="flex flex-col min-h-screen">
		<Header />
		<main class="flex-auto">
			<!--Exit Button -->
			<!--TODO: Looks HORRIBLE on mobile  -->
			<button
				class="btn btn-circle btn-outline m-3 md:m-6 lg:m-10"
				onclick="location.href='/blog'"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
			<article
				class="prose prose-lg container px-4 mx-auto pb-4 md:pb-5 lg:pb-7"
			>
				{
					heroImageAsset && (
						<Image src={heroImageAsset.default} alt="" />
					)
				}

				<h1 class="text-3xl">{title}</h1>

				<div class="container columns-3">
					<p class="text-primary text-sm m-0">
						Posted {publishDate && <time>{publishDate}</time>}
					</p>
					<p class="text-primary text-sm m-0 text-left">
						Read time: {readTime}
					</p>
					<p class="text-primary text-sm m-0 text-right">
						{lastUpdatedOn}
						{updatedDateCheck && <time>{updatedDateCheck}</time>}
					</p>
				</div>
				<div class="divider m-0"></div>
				<slot />
				<!-- This is where blog content goes -->
			</article>
			<button
				type="button"
				data-mdb-ripple="true"
				data-mdb-ripple-color="light"
				class="p-3 btn transition duration-700 ease-in-out opacity-0 bottom-5 right-5 fixed invisible"
				id="btn-back-to-top"
			>
				<svg
					aria-hidden="true"
					focusable="false"
					data-prefix="fas"
					class="w-4 h-4"
					role="img"
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 448 512"
				>
					<path
						fill="currentColor"
						d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z"
					>
					</path>
				</svg>
			</button>
		</main>
		<Footer />
		<script is:inline>
			// Get the button
			let mybutton = document.getElementById("btn-back-to-top");

			var body = document.body,
				html = document.documentElement;

			var height = Math.max(
				body.scrollHeight,
				body.offsetHeight,
				html.clientHeight,
				html.scrollHeight,
				html.offsetHeight
			);

			var footerHeight = height - 1400; //have button display about the footer when scrolled down
			//BUG Doesn't work on mobile

			console.log(height, footerHeight);

			// When the user scrolls down 20px from the top of the document, show the button
			window.onscroll = function () {
				scrollFunction();
			};

			function scrollFunction() {
				if (
					document.documentElement.scrollTop > 20 &&
					document.documentElement.scrollTop < footerHeight
				) {
					mybutton.style.visibility = "visible";
					mybutton.style.opacity = "1";
					mybutton.style.bottom = "20px";
				} else if (document.documentElement.scrollTop >= footerHeight) {
					mybutton.style.bottom = "80px";
					mybutton.style.opacity = "1";
					mybutton.style.visibility = "visible";
				} else {
					mybutton.style.opacity = "0";
					mybutton.style.visibility = "hidden";
				}
			}
			// When the user clicks on the button, scroll to the top of the document
			mybutton.addEventListener("click", backToTop);

			function backToTop() {
				document.body.scrollTop = 0;
				document.documentElement.scrollTop = 0;
			}
		</script>
	</body>
</html>
